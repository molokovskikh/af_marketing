@using System.Web.UI.WebControls
@using Marketing.ViewModels


@Html.DevExpress().GridView(settings => {
    settings.Caption = Model.Caption;
    settings.Name = Model.Name;
    settings.KeyFieldName = "Value";
    settings.CommandColumn.Visible = true;
    settings.CommandColumn.ShowSelectCheckbox = true;
    settings.CommandColumn.Width = Unit.Pixel(30);


    settings.EnableRowsCache = true;

    settings.Columns.Add(c => {
        c.FieldName = "Text";
        c.Caption = "Наименование";
        c.Settings.AllowAutoFilter = DefaultBoolean.True;
        c.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    });

    if (Model.Name == PromotionTableRequestType.SuppliersListToGet.ToString()
        || Model.Name == PromotionTableRequestType.SuppliersListToSet.ToString()) {
        settings.Columns.Add(c => {
            c.FieldName = "Region";
            c.Caption = "Регион";
        });
        settings.SettingsPager.PageSize = 20;
    } else {
        settings.SettingsPager.PageSize = 40;
    }
    settings.Columns.Add(c => {
        c.FieldName = "Value";
        c.Visible = false;
    });
    settings.CustomJSProperties = (sender, e) =>
    {
        MVCxGridView grid = (MVCxGridView)sender;
        e.Properties["cpVisibleTotalCount"] = Model.ItemsList.Count;
    };

    settings.DataBound = (sender, e) => {
        var filterCurrent = (MVCxGridView) sender;
        filterCurrent.Width = Unit.Pixel(400);
    };

    settings.Width = Unit.Pixel(400);
    settings.Settings.VerticalScrollableHeight = Model.Height;
    settings.CallbackRouteValues = new {Controller = "Marketing", Action = "PromotionEditListManager"};
    settings.SettingsBehavior.AllowFocusedRow = true;
    settings.SettingsSearchPanel.Visible = true;
    settings.SettingsPager.Mode = GridViewPagerMode.EndlessPaging;
    settings.ClientSideEvents.BeginCallback = $"{Model.Name}BeginCallback";
    settings.ClientSideEvents.FocusedRowChanged = $"{Model.Name}FocusedRowChanged";
    settings.ClientSideEvents.SelectionChanged = $"{Model.Name}SelectionChanged";
    settings.ClientSideEvents.EndCallback = $"{Model.Name}EndCallback";

}).Bind(Model.ItemsList).GetHtml()