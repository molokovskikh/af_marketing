@using Marketing.Models
@using Marketing.ViewModels
@model PromotionFromAssortmentViewModel

@{
  ViewBag.Title = $"Редактирование акции \"{Model.PromotionName}\"";
	var canSelectFromPrice = (ViewBag.Association as Association).Supplier != null;
}

<div class="form-group">
    <ol class="breadcrumb">
        <li>
            <a href="@Url.Action("Index", "Home")">Меню</a>
        </li>
        <li>
            <a href="@Url.Action("Index", "Marketing")">Маркетинговые мероприятия</a>
        </li>
        <li>
            <a href="@Url.Action("PromotionList", "Marketing", new {id = Model.MarketingEventId})">@Model.MarketingEventName</a>
        </li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</div>
<h2>@ViewBag.Title</h2>

<form id="promotionForm" action="@Url.Action("PromotionEdit", "Marketing", new { id = Model.PromotionId })" method="post" novalidate="novalidate">
@Html.AntiForgeryToken()
@Html.ValidationSummary("", new {@class = "text-danger"})
@Html.HiddenFor(m => m.PromotionId)
@Html.HiddenFor(m => m.MarketingEventId)
@if (canSelectFromPrice)
{
	<script>
    	function selectMethod(){
    		$("#promotionForm").submit();
    	}
	</script>
}
else
{
	<script>
    	function selectMethod(){
    		if ($("#@Html.IdFor(m => m.Method)").val() == "@(SelectMethod.SelectFromList.ToString())"){
    			$("#alertNoSupplier").hide();
					$("#workspace").show();
    		}
    		else {
    			$("#workspace").hide();
    			$("#alertNoSupplier").show();
    		}
    	}
	</script>
}
		<script>
        	function goodsInit(s, e) {
        		var valStr = $("#@Html.IdFor(m => m.SelectedProductIds)").val();
        		if (valStr == "")
        			return;
        		var arr = valStr.split(',');
        		s.SelectRowsByKey(arr);
        	}

        	function switchGoods(s, e) {
        		s.GetSelectedFieldValues("ProductId", GetSelectedGoodsIdsCallback);
        	}
        	function GetSelectedGoodsIdsCallback(ids) {
        		var valStr = ids.join(',');
        		$("#@Html.IdFor(m => m.SelectedProductIds)").val(valStr);
        	}

        	function gotoList() {
        		var url = "@Url.Action("PromotionEditFromList", "Marketing", new { id = Model.PromotionId })";
        		window.location = url;
        	}

        	$(document).ready(function(){
        		$("#@Html.IdFor(m => m.Method)").on("change", selectMethod);
        		$("#optionAdd").on("change", gotoList);
        	});
		</script>
<div class="form-group">
    <button type="submit" formaction="@Url.Action("PromotionFromAssortmentSave", "Marketing")" class="btn btn-primary">Сохранить</button>
</div>
<div class="form-group">
		@Html.ExtEnumDropDownListFor(m => m.Method, new { @class = "form-control" })
</div>

@if (!canSelectFromPrice)
{
<div class="alert alert-warning" id="alertNoSupplier" style="display:none">
    Для того, чтобы воспользоваться данным функционалом, обратитесь в АналитФармацию для выполнения необходимых настроек.
</div>
}
<div id="workspace">
		<div class="btn-group" data-toggle="buttons">
				<label class="btn btn-default">
						<input type="radio" name="option" id="optionAdd" autocomplete="off" />Добавить
				</label>
				<label class="btn btn-default active">
						<input type="radio" name="option" id="optionAssortment" autocomplete="off" checked />Показать ассортимент
				</label>
		</div>

	<h3>Товары</h3>
	@Html.HiddenFor(m => m.SelectedProductIds)
	<div class="form-group">
		@Html.Partial("partials/_AssortmentGrid", Model)
	</div>
</div>
</form>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
