@using System.Web.UI.WebControls
@using Marketing.ViewModels
@model PromotionConditionsViewModel
@{
  Html.EnableClientValidation();
  Html.EnableUnobtrusiveJavaScript();
}

@Html.DevExpress().GridView(settings =>
{
    settings.Name = "gridConditions";
    settings.CallbackRouteValues = new { Action = "GetConditionsGridData", Controller = "Marketing", Id = Model.Promotion.Id };
    settings.PreviewEncodeHtml = false;
    settings.EncodeHtml = false;
    settings.KeyFieldName = "PromotionId;ConditionId";
    settings.Width = Unit.Percentage(100);

    settings.SettingsEditing.BatchUpdateRouteValues = new { Action = "EditConditionsBatch", Controller = "Marketing", Id = Model.Promotion.Id };
    settings.SettingsEditing.Mode = GridViewEditingMode.Batch;
    settings.SettingsEditing.BatchEditSettings.EditMode = GridViewBatchEditMode.Cell;
    settings.SettingsEditing.BatchEditSettings.StartEditAction = GridViewBatchStartEditAction.FocusedCellClick;
    settings.CellEditorInitialize = (s, e) =>
    {
        ASPxEdit editor = (ASPxEdit)e.Editor;
        editor.ValidationSettings.Display = Display.None;
    };
    settings.SettingsEditing.BatchEditSettings.ShowConfirmOnLosingChanges = false;

    //settings.Columns.Add(column =>
    //{
    //    column.FieldName = "PromotionId";
    //    column.Width = Unit.Pixel(0);
    //});
    settings.Columns.Add(column =>
    {
        column.FieldName = "ProductName";
        column.PropertiesEdit.EncodeHtml = false;
        column.Caption = "Наименование";
        column.ReadOnly = true;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "Price";
        column.PropertiesEdit.EncodeHtml = false;
        column.Caption = "CIP-цена";
        column.EditorProperties().TextBox(p =>
        {
            p.DisplayFormatInEditMode = true;
        });
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "DealerPercent";
        column.PropertiesEdit.EncodeHtml = false;
        column.Caption = "% бонуса по договору";
        column.EditorProperties().SpinEdit(p =>
        {
            p.NumberType = SpinEditNumberType.Float;
            p.DisplayFormatInEditMode = true;
            p.MinValue = 0;
            p.Increment = 0.1m;
            p.LargeIncrement = 1;
        });
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "MemberPercent";
        column.PropertiesEdit.EncodeHtml = false;
        column.Caption = "% бонуса для участника";
        column.EditorProperties().SpinEdit(p =>
        {
            p.NumberType = SpinEditNumberType.Float;
            p.DisplayFormatInEditMode = true;
            p.MinValue = 0;
            p.Increment = 0.1m;
            p.LargeIncrement = 1;
        });
    });

    settings.SettingsPager.PageSize = 20;
    settings.SettingsSearchPanel.Visible = true;
    settings.SettingsPager.Position = PagerPosition.TopAndBottom;
    settings.SettingsPager.FirstPageButton.Visible = true;
    settings.SettingsPager.LastPageButton.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "50", "100", "150", "200" };
}).Bind(Model.Conditions).GetHtml()
